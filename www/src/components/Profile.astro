---
import config from "../../../config.json";
import Avatar from "./Avatar.astro";
import Link from "../icons/link.astro";
import User from "../icons/user.astro";
import Location from "../icons/location.astro";
import { Markdown } from "astro-remote";
import RSS from "../icons/rss.astro";
---

<article class="container">
  <div class="hero"></div>
  <Avatar size="large" border />
  <main>
    <div class="title">
      <div class="hgroup">
        <h1>{config.profile.name}</h1>
        <h2>@{config.handle}</h2>
      </div>
      <div>
        <a class="subscribe" href="/rss.xml">
          <span><RSS /></span>
        </a>
      </div>
    </div>
    <div>
      <ul>
        {
          Object.entries(config.bio).map(([key, value]) => (
            <li>
              <span>{key}</span>
              <Markdown content={value} />
            </li>
          ))
        }
      </ul>
    </div>
  </main>
  <footer>
    <ul>
      <li><User />{config.profile.pronouns}</li>
      <li><Location />{config.profile.location}</li>
      <li class="link">
        <a
          href={`https://${config.profile.website.replace(/https?\:\/\//, "")}`}
          ><span><Link /></span>{config.profile.website}</a
        >
      </li>
    </ul>
  </footer>
</article>

<style>
  article {
    margin: 0 auto;
  }
  .hero {
    height: 6rem;
    background-image: linear-gradient(120deg, #a18cd1 0%, #fbc2eb 100%);
    margin: -1rem;
    margin-bottom: -3rem;
  }
  .title {
    display: flex;
    justify-content: space-between;
  }
  .subscribe {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.25rem;
    background: white;
    color: black;
    --size: 2rem;
    width: var(--size);
    height: var(--size);
  }
  .subscribe :global(svg) {
    --size: 1.5rem;
    width: var(--size);
    height: var(--size);
    margin-left: 0.125rem;
  }
  article {
    padding: 1rem;
    padding-bottom: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  main {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-bottom: 0.5rem;
  }
  .hgroup {
    display: flex;
    flex-direction: column;
  }
  h1 {
    font-size: 1.25rem;
    font-weight: 800;
  }
  h2 {
    font-size: 0.9rem;
    font-weight: 400;
    color: var(--color-muted);
  }
  li > span {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 1.25rem;
    width: 1.25rem;
  }
  li > :global(p) {
    display: inline;
  }
  footer {
    margin-left: -1rem;
    margin-right: -1rem;
    border-top: 1px solid var(--color-border);
    color: var(--color-muted);
    background: linear-gradient(
      to bottom,
      rgb(18 18 18),
      rgb(18 18 18) 80%,
      rgb(18 18 18 / 0%)
    );
    z-index: 2;
    height: 100%;
  }
  footer > ul {
    display: grid;
    place-items: center;
    grid-template-columns: repeat(3, 1fr);
    padding: 0 1rem;
  }
  footer li {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 0.5rem;
    padding: 1rem 0;
  }
  .link {
    display: flex;
    justify-content: center;
    margin-right: -1rem;
    padding-right: 1rem;
    width: calc(100% + 1rem);
    height: 100%;
    position: relative;
  }
  .link a {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    color: inherit;
  }
  .link a:is(:hover, :focus) {
    color: white;
    background: rgb(255 255 255 / 2%);
  }
  footer :global(svg) {
    --size: 1.25rem;
    width: var(--size);
    height: var(--size);
  }
</style>
